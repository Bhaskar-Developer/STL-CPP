Lists are sequence containers that allow non-contiguous memory allocations. As compared to vectors, list has slow traversal, but once position is found then insertion and deltions are quick. Normally when we talk about list we mean doubly linked list. If we want to implement singly linked list then we use forward list.

Iterators of list:

begin(): returns the iterator pointing to the first element of the list.
end(): returns the iterator pointing to the theoritical last element after the last element of the list.
cbegin(): returns the constant iterator pointing to the first element of the list.
cend(): returns the constant iterator pointing to the theoritical last element after the last element of the list.
rbegin(): returns the reverse iterator pointing to the last element of the list.
rend(): returns the reverse iterator pointing at the position before the first element of the list.
crbegin(): returns the constant reverse iterator pointing to the last element of the list.
crend(): returns the constant reverse iterator pointing at the position before the first element of the list.


Modifier functions used with list:

push_front(g): adds a new element 'g' at the begining of the list.
push_back(g): adds a new element 'g' at the end of the list.
pop_front(): removes the first element of the list and reduces the size of the list by 1.
pop_back(): removes the last element of the list and reduces the size of the list by 1.
insert(): inserts a new element in the list before the element at that specified position.
insert(position,number_of_elements,element_value): Here if number_of_elements is not specified then it is taken as 1 by default. 
Note: position is an iterator.
advance(list_iterator,position): this is used to move list iterator to the mentioned position. 
Note: Iterator should be pointing to first position i.e. begin() for this to work properly.
erase(): removes a single element or range of elements from the list.
assign(): assigns new elements to the list by replacing current elements and resizes the list.
remove(): removes all elements from the list, which are equal to given element
remove_if(): used to remove all values from the list that correspond true to the predicate or condition given as parameter.
reverse(): Reverses the list.
resize(): used to resize the list container.
sort(): sorts the list in increasing order.
emplace_front(): used to insert a new element in the list container. The element is added at the begining of the list.
emplace_back(): used to insert a new element in the list. The element is inserted at the back of the list.
emplace(): extends the list by adding an element at the mentioned position.



Functions used with list:
front(): returns the value of the first element in the list.
back(): returns the value of the last element in the list.
empty(): used to check if the list is empty or not.
max_size(): returns the maximum number of elements the list can hold.
unique(): removes all duplicate conservative elements from the list.
clear(): used to remove all elements of the list container, which makes the size of the container to 0.
swap(): it is used to swap the contents of one list with the other list where both are of same type and size.
splice(): used to transfer elements from one list to another.
merge(): merges two sorted list into one.
